[package]
name = "facet-deserialize"
version = "0.28.0"
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "Event-based approach to deserialization for the facet ecosystem"
keywords = ["serialization", "deserialization", "reflection", "types"]
categories = [
    "encoding",
    "data-structures",
    "development-tools",
    "parsing",
    "no-std",
]

[features]
alloc = ["facet-core/alloc", "facet-reflect/alloc"]
std = ["alloc"]
ariadne = ["alloc", "dep:ariadne"]
rich-diagnostics = ["ariadne", "std"]
default = ["std", "rich-diagnostics"]

[dependencies]
ariadne = { version = "0.5.1", optional = true }
facet-core = { version = "0.28.0", default-features = false }
facet-reflect = { version = "0.28.0", default-features = false }
log = "0.4.27"
owo-colors = "4.2.2"

[dev-dependencies]
cargo-husky = { version = "1.5.0", default-features = false, features = ["user-hooks"] }
facet = { version = "0.28" }
facet-testhelpers = { version = "0.28" }
